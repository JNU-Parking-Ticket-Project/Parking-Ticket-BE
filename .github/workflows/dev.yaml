name: 개발 서버 워크플로우
on:
  push:
    branches:
      - dev

env:
  ENVIRONMENT: development
  IMAGE_NAME: jnuparking/jnu-parking-dev
  SERVICE_NAME: jnu-parking-dev-was

concurrency:
  group: development

jobs:
  prepare-variables:
    name: 워크플로우 변수 준비하기
    runs-on: ubuntu-latest
    outputs:
      image-name: ${{ steps.setup-env.outputs.image-name }}
      image-tag: ${{ steps.setup-env.outputs.image-tag }}
      environment: ${{ steps.setup-env.outputs.environment }}
      service-name: ${{ steps.setup-env.outputs.service-name }}
    steps:
      - name: Github에서 레포 받아오기
        uses: actions/checkout@v3
      - name: 변수 출력하기
        id: setup-env
        run: |
          echo "image-name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "image-tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "service-name=$SERVICE_NAME" >> $GITHUB_OUTPUT

  call-build-workflow:
    if: github.event_name == 'push'
    needs: [ prepare-variables ]
    name: 이미지 빌드
    uses: ./.github/workflows/build.yaml
    permissions:
      id-token: write
      contents: read
    with:
        image-tag: ${{ needs.prepare-variables.outputs.image-tag }}
        image-name: ${{ needs.prepare-variables.outputs.image-name }}
    secrets:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  call-deploy-workflow:
    if: github.event_name == 'push'
    needs: [ prepare-variables, call-build-workflow ]
    name: 서비스 배포
    uses: ./.github/workflows/dev-deploy.yaml
    permissions:
      id-token: write
      contents: read
    secrets:
      SSH_HOST: ${{ secrets.DEV_SSH_HOST }}
      SSH_USERNAME: ${{ secrets.DEV_SSH_USERNAME }}
      SSH_KEY: ${{ secrets.DEV_SSH_KEY }}
      SSH_PORT: ${{ secrets.DEV_SSH_PORT }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    with:
      image-name: ${{ needs.prepare-variables.outputs.image-name }}
      image-tag: ${{ needs.prepare-variables.outputs.image-tag }}
      environment: ${{ needs.prepare-variables.outputs.environment }}
      service-name: ${{ needs.prepare-variables.outputs.service-name }}