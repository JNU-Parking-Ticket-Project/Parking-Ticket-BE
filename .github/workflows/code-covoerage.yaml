name: CI 근데 SonarCloud와 Jacoco를 곁들인

on:
  pull_request:
    branches:
      - dev
      - feature-#185

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports: 3306:3306
        env:
          MYSQL_DATABASE: 'ticket'
          MYSQL_ROOT_PASSWORD: 1234
      redis:
        image: redis:7.2
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
      - name: 코드 체크
        uses: actions/checkout@v3

      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: Gradle 캐싱
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: 권한부여
        run: chmod +x gradlew

      - name: 빌드와 테스트
        run: ./gradlew clean build jacocoTestReport # 임시로 테스트 체크 안함

      - name: 테스트 커버리지를 PR에 코멘트로 등록합니다
        id: jacoco
        uses: madrapps/jacoco-report@v1.2
        with:
          title: 📝 테스트 커버리지 리포트입니다
          paths: ${{ github.workspace }}/Ticket-Api/build/reports/jacoco.xml
          token: ${{ secrets.JACOCO_TOKEN }}
          min-coverage-overall: 50
          min-coverage-changed-files: 50

      - name: SonarCloud 시작
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ secrets.PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.ORGANIZATION }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
            -Dsonar.qualitygate.wait=true

      - name: SonarCloud Quality Gate 상태
        id: sonar_quality_gate
        run: |
          STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ secrets.PROJECT_KEY }}" | jq -r '.projectStatus.status')
          echo "Quality Gate status: $STATUS"
          echo "::set-output name=status::$STATUS"


  # deploy 있어야 되긴하는데 일단 스킵(논의 후 작성)
  notification:
    name: Slack Notification
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build]
    steps:
      - uses: martialonline/workflow-status@v3
        id: check
      - name: Slack 공지
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ steps.check.outputs.status }} # workflow결과 받아옴
          author_name: Github Action Bot
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_CI }}
        if: always()
